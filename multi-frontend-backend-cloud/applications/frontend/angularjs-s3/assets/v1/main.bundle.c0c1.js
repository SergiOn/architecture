!function(n){function t(t){for(var i,a,r=t[0],s=t[1],m=t[2],d=0,u=[];d<r.length;d++)a=r[d],Object.prototype.hasOwnProperty.call(e,a)&&e[a]&&u.push(e[a][0]),e[a]=0;for(i in s)Object.prototype.hasOwnProperty.call(s,i)&&(n[i]=s[i]);for(l&&l(t);u.length;)u.shift()();return c.push.apply(c,m||[]),o()}function o(){for(var n,t=0;t<c.length;t++){for(var o=c[t],i=!0,r=1;r<o.length;r++){var s=o[r];0!==e[s]&&(i=!1)}i&&(c.splice(t--,1),n=a(a.s=o[0]))}return n}var i={},e={0:0},c=[];function a(t){if(i[t])return i[t].exports;var o=i[t]={i:t,l:!1,exports:{}};return n[t].call(o.exports,o,o.exports,a),o.l=!0,o.exports}a.m=n,a.c=i,a.d=function(n,t,o){a.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:o})},a.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},a.t=function(n,t){if(1&t&&(n=a(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(a.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var i in n)a.d(o,i,function(t){return n[t]}.bind(null,i));return o},a.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return a.d(t,"a",t),t},a.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},a.p="https://frontend-cloud-s3.s3.amazonaws.com/angularjs/";var r=window.webpackJsonp=window.webpackJsonp||[],s=r.push.bind(r);r.push=t,r=r.slice();for(var m=0;m<r.length;m++)t(r[m]);var l=s;c.push([27,1]),o()}([,,,,,,,function(n,t){n.exports='<div class="home">\n\n    <h1 class="title">(UI-1) Found in {{ $ctrl.name }}</h1>\n\n    <section class="navigation">\n        <div class="link-container">\n            <md-button class="md-primary link" ui-sref-active="active" ui-sref="home" ng-click="$ctrl.goHome()">Go to Home</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-primary link" ui-sref-active="active" ui-sref="search" ng-click="$ctrl.goSearch()">Go to Search</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-warn link" ng-click="$ctrl.goAccommodation()">Go to Accommodation</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-warn link" ng-click="$ctrl.goAccommodationSSR()">Go to Accommodation (SSR)</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-primary link" ui-sref-active="active" ui-sref="customize" ng-click="$ctrl.goCustomize()">Go to Customize</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-primary link" ui-sref-active="active" ui-sref="pax" ng-click="$ctrl.goPax()">Go to Pax</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-warn link" ng-click="$ctrl.goPayment()">Go to Payment</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-warn link" ng-click="$ctrl.goConfirmation()">Go to Confirmation</md-button>\n        </div>\n\x3c!--        <div class="link-container">--\x3e\n\x3c!--            <md-button class="md-primary link" ng-click="$ctrl.goSearch()">Go to Search</md-button>--\x3e\n\x3c!--            <md-button class="md-accent">Accent Button</md-button>--\x3e\n\x3c!--            <md-button class="md-warn">Warn Button</md-button>--\x3e\n\x3c!--            <md-button class="md-icon-button">Icon Button</md-button>--\x3e\n\x3c!--        </div>--\x3e\n    </section>\n\n    <greeting></greeting>\n</div>\n'},function(n,t){n.exports='<div class="search">\n\n    <h1 class="title">(UI-1) Found in {{ $ctrl.name }}</h1>\n\n    <section class="navigation">\n        <div class="link-container">\n            <md-button class="md-primary link" ui-sref-active="active" ui-sref="home" ng-click="$ctrl.goHome()">Go to Home</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-primary link" ui-sref-active="active" ui-sref="search" ng-click="$ctrl.goSearch()">Go to Search</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-warn link" ng-click="$ctrl.goAccommodation()">Go to Accommodation</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-warn link" ng-click="$ctrl.goAccommodationSSR()">Go to Accommodation (SSR)</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-primary link" ui-sref-active="active" ui-sref="customize" ng-click="$ctrl.goCustomize()">Go to Customize</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-primary link" ui-sref-active="active" ui-sref="pax" ng-click="$ctrl.goPax()">Go to Pax</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-warn link" ng-click="$ctrl.goPayment()">Go to Payment</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-warn link" ng-click="$ctrl.goConfirmation()">Go to Confirmation</md-button>\n\n        </div>\n    </section>\n\n    <greeting></greeting>\n</div>\n'},function(n,t){n.exports='<div class="customize">\n\n    <h1 class="title">(UI-1) Found in {{ $ctrl.name }}</h1>\n\n    <section class="navigation">\n        <div class="link-container">\n            <md-button class="md-primary link" ui-sref-active="active" ui-sref="home" ng-click="$ctrl.goHome()">Go to Home</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-primary link" ui-sref-active="active" ui-sref="search" ng-click="$ctrl.goSearch()">Go to Search</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-warn link" ng-click="$ctrl.goAccommodation()">Go to Accommodation</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-warn link" ng-click="$ctrl.goAccommodationSSR()">Go to Accommodation (SSR)</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-primary link" ui-sref-active="active" ui-sref="customize" ng-click="$ctrl.goCustomize()">Go to Customize</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-primary link" ui-sref-active="active" ui-sref="pax" ng-click="$ctrl.goPax()">Go to Pax</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-warn link" ng-click="$ctrl.goPayment()">Go to Payment</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-warn link" ng-click="$ctrl.goConfirmation()">Go to Confirmation</md-button>\n\n        </div>\n    </section>\n\n    <greeting></greeting>\n</div>\n'},function(n,t){n.exports='<div class="pax">\n\n    <h1 class="title">(UI-1) Found in {{ $ctrl.name }}</h1>\n\n    <section class="navigation">\n        <div class="link-container">\n            <md-button class="md-primary link" ui-sref-active="active" ui-sref="home" ng-click="$ctrl.goHome()">Go to Home</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-primary link" ui-sref-active="active" ui-sref="search" ng-click="$ctrl.goSearch()">Go to Search</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-warn link" ng-click="$ctrl.goAccommodation()">Go to Accommodation</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-warn link" ng-click="$ctrl.goAccommodationSSR()">Go to Accommodation (SSR)</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-primary link" ui-sref-active="active" ui-sref="customize" ng-click="$ctrl.goCustomize()">Go to Customize</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-primary link" ui-sref-active="active" ui-sref="pax" ng-click="$ctrl.goPax()">Go to Pax</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-warn link" ng-click="$ctrl.goPayment()">Go to Payment</md-button>\n        </div>\n        <div class="link-container">\n            <md-button class="md-warn link" ng-click="$ctrl.goConfirmation()">Go to Confirmation</md-button>\n\n        </div>\n    </section>\n\n    <greeting></greeting>\n</div>\n'},function(n,t){n.exports="<ui-view></ui-view>\n"},function(n,t){n.exports='<div class="greeting" ng-if="false">\n    <h4>Loading greeting</h4>\n    <md-button class="md-primary load-button" ng-click="$ctrl.loadData()">Load Data</md-button>\n    <md-progress-circular class="md-primary spinner" ng-if="$ctrl.loading" md-diameter="{{ $ctrl.spinnerDiameter }}"></md-progress-circular>\n</div>\n\n<md-list ng-if="$ctrl.greetings && !$ctrl.loading">\n    <div ng-repeat="greeting in $ctrl.greetings">\n        <h3>Country: {{ greeting.country }}</h3>\n        <h4>Translation: {{ greeting.translation }}</h4>\n        <p class="paragraph">Description: {{ greeting.description }}</p>\n        <h4>Family name: {{ greeting.family.name }}</h4>\n        <p class="paragraph">Family description: {{ greeting.family.description }}</p>\n        <md-divider></md-divider>\n    </div>\n</md-list>\n'},,,,,,,,function(n,t,o){},function(n,t,o){},function(n,t,o){},function(n,t,o){},,,function(n,t,o){},function(n,t,o){"use strict";o.r(t);var i=o(4),e=o.n(i),c=o(5),a=o.n(c),r=o(6),s=o.n(r),m=(o(19),o(7)),l=o.n(m),d=function(){function n(n,t){this.$state=n,this.$window=t,this.name="Home"}return n.$inject=["$state","$window"],n.prototype.goHome=function(){this.$state.go("home")},n.prototype.goSearch=function(){this.$state.go("search")},n.prototype.goCustomize=function(){this.$state.go("customize")},n.prototype.goPax=function(){this.$state.go("pax")},n.prototype.goAccommodation=function(){this.$window.location.href="accommodation"},n.prototype.goAccommodationSSR=function(){this.$window.location.href="accommodation-ssr"},n.prototype.goPayment=function(){this.$window.location.href="payment"},n.prototype.goConfirmation=function(){this.$window.location.href="confirmation"},n}(),u=(o(20),{restrict:"E",bindings:{},template:l.a,controller:d}),g=e.a.module("home",[]).component("home",u).name,p=o(8),f=o.n(p),h=function(){function n(n,t){this.$state=n,this.$window=t,this.name="Search"}return n.$inject=["$state","$window"],n.prototype.goHome=function(){this.$state.go("home")},n.prototype.goSearch=function(){this.$state.go("search")},n.prototype.goCustomize=function(){this.$state.go("customize")},n.prototype.goPax=function(){this.$state.go("pax")},n.prototype.goAccommodation=function(){this.$window.location.href="accommodation"},n.prototype.goAccommodationSSR=function(){this.$window.location.href="accommodation-ssr"},n.prototype.goPayment=function(){this.$window.location.href="payment"},n.prototype.goConfirmation=function(){this.$window.location.href="confirmation"},n}(),v=(o(21),{restrict:"E",bindings:{},template:f.a,controller:h}),$=e.a.module("search",[]).component("search",v).name,k=o(9),b=o.n(k),y=function(){function n(n,t){this.$state=n,this.$window=t,this.name="Customize"}return n.$inject=["$state","$window"],n.prototype.goHome=function(){this.$state.go("home")},n.prototype.goSearch=function(){this.$state.go("search")},n.prototype.goCustomize=function(){this.$state.go("customize")},n.prototype.goPax=function(){this.$state.go("pax")},n.prototype.goAccommodation=function(){this.$window.location.href="accommodation"},n.prototype.goAccommodationSSR=function(){this.$window.location.href="accommodation-ssr"},n.prototype.goPayment=function(){this.$window.location.href="payment"},n.prototype.goConfirmation=function(){this.$window.location.href="confirmation"},n}(),w=(o(22),{restrict:"E",bindings:{},template:b.a,controller:y}),x=e.a.module("customize",[]).component("customize",w).name,S=o(10),P=o.n(S),G=function(){function n(n,t){this.$state=n,this.$window=t,this.name="Pax"}return n.$inject=["$state","$window"],n.prototype.goHome=function(){this.$state.go("home")},n.prototype.goSearch=function(){this.$state.go("search")},n.prototype.goCustomize=function(){this.$state.go("customize")},n.prototype.goPax=function(){this.$state.go("pax")},n.prototype.goAccommodation=function(){this.$window.location.href="accommodation"},n.prototype.goAccommodationSSR=function(){this.$window.location.href="accommodation-ssr"},n.prototype.goPayment=function(){this.$window.location.href="payment"},n.prototype.goConfirmation=function(){this.$window.location.href="confirmation"},n}(),z=(o(23),{restrict:"E",bindings:{},template:P.a,controller:G}),C=e.a.module("pax",[]).component("pax",z).name,A=e.a.module("components",[g,$,x,C]).name,j=o(11),H=function(){this.name="App"},R={restrict:"E",bindings:{},template:o.n(j).a,controller:H},O=o(13),D=e.a.module("appConfig",[O.a]).config(["$locationProvider","$stateProvider","$urlRouterProvider",function(n,t,o){n.html5Mode(!0),o.otherwise("/"),t.state("home",{url:"/",component:"home"}).state("search",{url:"/search",component:"search"}).state("customize",{url:"/customize",component:"customize"}).state("pax",{url:"/pax",component:"pax"})}]).name,E=o(12),F=o.n(E),_=function(){function n(n){this.greetingService=n,this.loading=!1,this.spinnerDiameter=40}return n.$inject=["greetingService"],n.prototype.loadData=function(){var n=this;this.loading=!0,this.greetingService.getData().then((function(t){n.greetings=t,console.log(t)})).finally((function(){n.loading=!1}))},n}(),I=(o(26),{restrict:"E",bindings:{},template:F.a,controller:_}),M=function(){function n(n,t,o){this.$http=n,this.$q=t,this.$timeout=o,this.url="/api/greetings"}return n.$inject=["$http","$q","$timeout"],n.prototype.getData=function(){var n=this;return this.$http.get(this.url).then((function(t){return n.$q((function(o){n.$timeout((function(){o(t.data)}),2e3)}))}))},n}(),U=e.a.module("greeting",[]).component("greeting",I).service("greetingService",M).name,q=e.a.module("app",[D,s.a,a.a,A,U]).component("app",R).name;e.a.module("main",[q])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,